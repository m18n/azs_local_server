cmake_minimum_required(VERSION 3.1)
project(azs_local_server)
IF (WIN32)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/site DESTINATION ${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE})
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/library/windows/mysqlconn/lib64/mysqlcppconn8-2-vs14.dll DESTINATION ${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE})
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/library/windows/mysqlconn/lib64/libssl-1_1-x64.dll DESTINATION ${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE})
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/library/windows/mysqlconn/lib64/libcrypto-1_1-x64.dll DESTINATION ${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE})
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/library/windows/openssl/libcrypto-3-x64.dll DESTINATION ${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE})
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/library/windows/openssl/libssl-3-x64.dll DESTINATION ${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE})
include_directories(library/windows/mysqlconn/include)
link_directories(library/windows/mysqlconn/lib64/vs14)
include_directories(library/windows/openssl/include)
link_directories(library/windows/openssl)
ELSE()
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/site DESTINATION ${CMAKE_BINARY_DIR}/bin)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/DockerfileLinux DESTINATION ${CMAKE_BINARY_DIR})
file(RENAME ${CMAKE_BINARY_DIR}/DockerfileLinux ${CMAKE_BINARY_DIR}/Dockerfile)
find_package(OpenSSL REQUIRED)
include_directories(library/linux/mysqlconn/include)
link_directories(library/linux/mysqlconn/lib64)
ENDIF()
include_directories(library/jwt)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
add_subdirectory(library/Crow)
link_directories(library/Crow/include)
add_executable(${PROJECT_NAME} main.cpp)
IF (WIN32)
target_link_libraries(${PROJECT_NAME} Crow libssl.lib libcrypto.lib mysqlcppconn8.lib)
ELSE()
target_link_libraries(${PROJECT_NAME} Crow OpenSSL::SSL OpenSSL::Crypto libmysqlcppconn8.so)
ENDIF()